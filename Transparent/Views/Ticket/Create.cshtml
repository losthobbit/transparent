@model Transparent.Business.ViewModels.CreateTicketViewModel
@using Transparent.Extensions
@using Transparent.Data.Models
@using Transparent.Business.ViewModels
@using Castle.Windsor
@using Common

@{
    ViewBag.Title = "Create";
}

@Html.Partial("_MenuPartial")

<header class="subMenu">
    @foreach (var value in (TicketType[])Enum.GetValues(typeof(TicketType)))
    {
        if(Model.TicketType == value)
        {
            <span>@MvcHtmlString.Create(value.DisplayName())</span>
        }
        else
        {
            @Html.ActionLink(value.DisplayName(), "Create", new { TicketType = value });
        }
    }
</header>    

@using (Html.BeginForm("Create" + Model.TicketType, "Ticket"))
{
    @Html.ValidationSummary(true)

    <fieldset class="long gap-above">
        <legend>Ticket</legend>

        <div class="editor-label float-left fifth">
            @Html.LabelFor(model => model.Model.Heading)
        </div>
        <div class="editor-field fourFifths">
            @Html.EditorFor(model => model.Model.Heading)
            @Html.ValidationMessageFor(model => model.Model.Heading)
        </div>

        <div class="editor-field gap-above">
            @Html.EditorFor(model => model.Model.Body)
            @Html.ValidationMessageFor(model => model.Model.Body)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Model.TicketTags)
            @Html.ValidationMessageFor(model => model.TicketTagIds)
        </div>
        <div class="editor-field" id="tagSelectors">
        </div>
        @{
            var container = ((IContainerAccessor)Context.ApplicationInstance).Container;
            var tags = container.Resolve<Transparent.Data.Interfaces.ITags>();
            <script>
                var tags = @(tags.SerializedIndentedTags);
                var enableAdd = @Json.Encode(Model.MultipleTags);

                $(function(){
                    new TagSelectors($("#tagSelectors"), enableAdd, false, tags);
                    tagSelectors.addIfRequired();
                    validateDynamicContent($("#TicketTagIds"));
                });
            </script>
        }
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}
