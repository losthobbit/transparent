@model Transparent.Data.ViewModels.CreateTicketViewModel
@using Transparent.Extensions
@using Transparent.Data.Models
@using Transparent.Data.ViewModels
@using Castle.Windsor
@using Common

@{
    ViewBag.Title = "Create";
}

@Html.Partial("_MenuPartial")

<header>
    <ul id="menu" class="left subMenu">
    @foreach (var value in (TicketType[])Enum.GetValues(typeof(TicketType)))
    {
        <li>
        @if(Model.TicketType == value)
        {
            <b>@MvcHtmlString.Create(value.DisplayName())</b>
        }
        else
        {
            @Html.ActionLink(value.DisplayName(), "Create", new { TicketType = value });
        }
        </li>
    }
    </ul>
</header>    

@using (Html.BeginForm("Create" + Model.TicketType, "Ticket"))
{
    @Html.ValidationSummary(true)

    <fieldset class="long">
        <legend>Ticket</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Model.Heading)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Model.Heading)
            @Html.ValidationMessageFor(model => model.Model.Heading)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Model.Body)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Model.Body)
            @Html.ValidationMessageFor(model => model.Model.Body)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Model.TicketTags)
            @Html.ValidationMessageFor(model => model.TicketTagIds)
        </div>
        <div class="editor-field" id="tagSelectors">
        </div>
        @{
            var container = ((IContainerAccessor)Context.ApplicationInstance).Container;
            var tags = container.Resolve<Transparent.Data.Interfaces.ITags>();
            <script>
                var tagCount = 0;

                function addTagSelector(div)
                {
                    var tags = @tags.SerializedIndentedTags;
                    var selectElement = "<select id=\"TicketTagIds\" name=\"TicketTagIds\"";                    
                    selectElement += "@Html.Raw(Model.MultipleTags ? " onchange=\\\"addTagSelectorIfRequired()\\\"" : "")";
                    if(tagCount == 0)
                        selectElement += "data-val=\"true\" data-val-requirestag=\"A tag is required.\" data-val-requirestag-param=\"whatever\"";
                    selectElement += " class=\"tags\"><option value=\"-1\" selected>Not selected</option>";
                    for (var i = 0; i < tags.length; i++) {
                        var tag = tags[i];
                        selectElement += "<option value=\"" + tag.id + "\">" + repeat("&nbsp;&nbsp;", tag.indent) + tag.name + "</option>";
                    }
                    selectElement += "</select>"
                    div.append(selectElement);
                    tagCount ++;
                }

                function addTagSelectorIfRequired()
                {
                    var div = $("#tagSelectors");
                    var selectElements = div.contents();
                    for(var i = 0; i < selectElements.length; i++)
                    {
                        if(selectElements[i].value == -1)
                            return;
                    }
                    addTagSelector(div);
                }

                $(function(){
                    addTagSelectorIfRequired();
                    validateDynamicContent($("#TicketTagIds"));
                });
            </script>
        }
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}
