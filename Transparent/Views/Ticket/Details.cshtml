@model Transparent.Business.ViewModels.TicketDetailsViewModel
@using Transparent.Business.ViewModels;
@using Transparent.Business.Maps;
@using Transparent.Data.Models;
@using Transparent.Data;
@using Common;

@{
    ViewBag.Title = Model.Heading;
}

@Html.Partial("_MenuPartial")

@Html.Partial("_DetailsPartial", Model.Map(), new ViewDataDictionary {{ "TagInfo", Model.TagInfo }})

<div
  class="fb-like"
  data-share="true"
  data-width="450"
  data-show-faces="true">
</div>

@if (Model.TicketType != TicketType.Question && Model.State >= TicketState.Voting)
{
    <div id="votePartial" class="lighter">   
    @Html.Action("_Vote", Model.Vote)
    </div>
}

@if (Model.TicketType == TicketType.Suggestion && Model.State >= TicketState.Accepted && User.IsInRole(Constants.VolunteerRole))
{
    <div id="assignPartial" class="lighter">   
    @Html.Action("_Assign", new AssignViewModel { TicketId = Model.Id, TicketState = Model.State, Username = Model.AssignedName })
    </div>
}

<table class="fw">
@{
    var args = Model.Arguments;
    var userCanDiscuss = Model.State == TicketState.Discussion;
    var usersEditableArg = args.SingleOrDefault(arg => userCanDiscuss && arg.FkUserId == WebSecurity.CurrentUserId);
    foreach (var argument in args.Where(arg => arg != usersEditableArg))
    {
        @Html.Partial("_DiscussViewPartial", argument)
    }
}
</table>

@if (userCanDiscuss)
{
    <input id="discussButton" style="display:@(usersEditableArg == null?"inline":"none")" type="button" value="Add @Model.TextForArgument.PrefixIndefiniteArticle()"/>
    <div id="discussAnswer" style="display:@(usersEditableArg == null?"none":"inline")">
        @Html.Action("_Discuss", usersEditableArg ?? new ArgumentViewModel { FkTicketId = Model.Id, Caption = @Model.TextForArgument.CapitalizeFirstLetter() })
    </div>
    <script>
        $(function () {
            $("#discussButton").click(function (e) {
                $("#discussButton").hide();
                $("#discussAnswer").show("slow");
            });
        });
    </script>    
}
