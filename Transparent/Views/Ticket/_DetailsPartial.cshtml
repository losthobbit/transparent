@model Transparent.Data.Models.BaseTicket
@using Castle.Windsor
@using Transparent.Extensions;
@using Transparent.Business.ViewModels;
@using Transparent.Data.Models;
@{
    var container = ((IContainerAccessor)Context.ApplicationInstance).Container;
    var tags = container.Resolve<Transparent.Data.Interfaces.ITags>();
    var tickets = container.Resolve<Transparent.Business.Interfaces.ITickets>();
    var competentTagIds = tickets.GetCompetentTags(WebSecurity.CurrentUserId).Select(tag => tag.Id).ToArray();
}
<fieldset class="ticket @Model.TicketType.GetClass()">
    <legend>Ticket</legend>

    <div class="display-field">
        <h3>@Html.DisplayFor(model => model.TicketType): @Html.DisplayFor(model => model.Heading)</h3>
    </div>
    <div class="metadata">
    @if (Model.StateHint != null)
    {
        if(Model.StateHint.ShowState)
        {
            <b>@Model.State.DisplayName()&nbsp;state.&nbsp;&nbsp;</b>
        }
        if(Model.StateHint.Details != null) 
        {
            @Model.StateHint.Details
            <text>&nbsp;&nbsp;</text>
        }
        if (Model.StateHint.Url != null)
        {
            <a href="@Model.StateHint.Url" target="_blank">more...</a>
        }
    }
    </div>
    <div class="gap-above">
        @if (ViewBag.ShowRank == null || ViewBag.ShowRank)
        {
        <div id="rankPartial" class="float-left display-field" style="text-align:center">    
            @Html.Action("_Rank", Model)
        </div>
        }
        <div class="display-field">
            @Html.DisplayFor(model => model.Body, "TextToHtml")
        </div>
        <div class="metadata">
            <div id="ticketTagsPartial">
                @Html.Action("_TicketTags", new TicketTagsViewModel(Model, 
               ViewBag.EnableTagButton == null || ViewBag.EnableTagButton, (IEnumerable<TicketTagViewModel>)ViewData["TagInfo"]))
            </div>
            <div id="tagSelectors"></div>
            <script>
                var tags = @(tags.SerializeAndIndentTags(competentTagIds));
                var enableAdd = @Json.Encode(Model.MultipleTags && Model.State <= TicketState.Discussion);

                $(function(){
                    if(tags.length > 0 && enableAdd)
                    {
                        new TagSelectors($("#tagSelectors"), enableAdd, true, tags, @Model.Id);
                        tagSelectors.addIfRequired();
                    }
                });
            </script>  
            <div class="float-right">
                @Model.TextForCreated at @Html.DisplayFor(model => model.CreatedDate)
            </div>
        </div>
    </div>
</fieldset>