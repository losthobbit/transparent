@model Transparent.Data.Models.TicketsContainer
@using Transparent.Extensions;
@using Transparent.Data.Models;
@using Castle.Windsor
@{
    var container = ((IContainerAccessor)Context.ApplicationInstance).Container;
    var configuration = container.Resolve<Transparent.Data.Interfaces.IConfiguration>();
    if (Model != null)
    {      
        <section>
            <header class="subMenu">
            @if(!ViewData.ContainsKey("ShowTicketTypeMenu") || (bool)ViewData["ShowTicketTypeMenu"])
            {
                foreach(var ticketType in ModelViewExtensions.TicketTypeInfo)
                {
                    if(Model.TicketType == ticketType.Type)
                    {
                        <span class="@ticketType.Type.GetClass()">@ticketType.PluralDisplayName</span>
                    }
                    else
                    {
                        @Html.ActionLink(ticketType.PluralDisplayName, ViewContext.RouteData.Values["action"].ToString(), Model.GetState(ticketType.Type), new {@class = ticketType.Type.GetClass()});
                    }
                }
            }
            @if (ViewData.ContainsKey("States"))
            {
                var states = (TicketState[])ViewData["States"];
                foreach (var state in states)
                {
                    if(Model.TicketState == state)
                    {
                        <span>@state.DisplayName()</span>
                    }
                    else
                    {
                        Html.ActionLink(state.DisplayName(), ViewContext.RouteData.Values["action"].ToString(), Model.GetState(state));
                    }
                }
            }
            </header>

            <div class="row gap-above">
                <div class="col-sm-10 thin">
                    @foreach (var item in Model.PagedList)
                    {
                    <div class="row ticket @item.TicketType.GetClass() underlined">
                        <div class="col-sm-3">
                            <div class="float-left wide20">@Html.DisplayFor(modelItem => item.Rank)</div>
                            <div class="float-left wide40">@item.TicketType.GetChar()</div>
                            <div class="float-left wide70">@Html.DisplayFor(modelItem => item.State)</div>
                        </div>
                        <div class="col-sm-9">
                            <div class="float-left thin wide550">
                                @Html.ActionLink(item.Heading, "Details", new { id=item.Id })
                                <div id="ticketTagsPartial" class="metadata">
                                    @Html.Action("_TicketTags", new Transparent.Business.ViewModels.TicketTagsViewModel(item, true, configuration))
                                </div>
                            </div>
                            <div class="float-right metadata wide100">
                                @item.TextForCreated at @Html.DisplayFor(modelItem => item.CreatedDate)
                            </div>
                        </div>
                    </div>
                    }
                </div>
                <div class="col-sm-2"></div>
            </div>
            <div class="row">
            @Html.Partial("_PagesPartial", Model)
            </div>
        </section>
    }
}

