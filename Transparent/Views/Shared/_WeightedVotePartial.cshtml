@model Transparent.Business.ViewModels.Interfaces.IVoteViewModel
@using Transparent.Data.Models
@{
    var imageHeight = 19;
    var barHeight = imageHeight - (imageHeight * Model.NotAcceptedThreshold / Model.FullAcceptanceThreshold);
    var pointsHeight = Model.TotalPoints >= Model.FullAcceptanceThreshold
        ? 0
        : imageHeight - (imageHeight * Model.TotalPoints / Model.FullAcceptanceThreshold);
    var remainingRed = 255;
    var remainingGreen = 0;
    if(Model.TotalPoints > Model.NotAcceptedThreshold)
    {
        remainingRed = 255 - 255 * (Model.TotalPoints - Model.NotAcceptedThreshold) / (Model.FullAcceptanceThreshold - Model.NotAcceptedThreshold);
        remainingGreen = 255;
    }
}
<span class="field-tip float-left">
    <svg class="thresholdBar" width="10" height="@imageHeight">
        <rect x="0" y="0" width="10" height="@pointsHeight" style="fill:rgb(@remainingRed,@remainingGreen,0);stroke-width:1" />
        <rect x="0" y="@pointsHeight" width="10" height="@imageHeight" style="fill:rgb(0,255,0);stroke-width:1" />
        <rect x="0" y="0" width="10" height="@imageHeight" style="stroke:black;stroke-width:1" fill="none" />
        <line x1="0" y1="@barHeight" x2="10" y2="@barHeight" style="stroke:rgb(0,0,0);stroke-width:1" />
    </svg>
    <span class="tip-content">@Model.TotalPoints point@(Model.TotalPoints == 1 ? "": "s")</span>
</span> 
@if (Model.UserMayVote)
{
    var buttonClassFor = (Model.UserVote == Stance.For ? "inset" : "outset") + " ui-icon-check ui-icon";
    var buttonClassAgainst = (Model.UserVote == Stance.Against ? "inset" : "outset") + " ui-icon-close ui-icon";
    var buttonNameFor = (Model.UserVote == Stance.For ? "neutralId" : "forId");
    var buttonNameAgainst = (Model.UserVote == Stance.Against ? "neutralId" : "againstId");
    <div class="votingButtons float-left">
        <button name="@buttonNameAgainst" class="@buttonClassAgainst" title="Delete tag" value="@Model.Id">Against</button>
        <button name="@buttonNameFor" class="@buttonClassFor" title="Verify tag" value="@Model.Id">For</button>
    </div>
}
